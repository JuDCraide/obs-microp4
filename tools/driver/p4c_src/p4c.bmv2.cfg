# Copyright 2013-present Barefoot Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- Python -*-

from p4c_src.driver import BackendDriver

# target
simple_switch_target = BackendDriver('bmv2-ss-p4org')

# commands
simple_switch_target.add_command('preprocessor', 'cc')
simple_switch_target.add_command('compiler', os.path.join(os.environ['P4C_BIN_DIR'],'p4c-bm2-ss'))

# options
simple_switch_target.add_command_option('preprocessor', "-E -x c")

if source_basename is not None:
    basepath = "{}/{}".format(output_dir, source_basename)
    # preprocessor
    simple_switch_target.add_command_option('preprocessor', "-o")
    simple_switch_target.add_command_option('preprocessor', "{}.p4i".format(basepath))
    simple_switch_target.add_command_option('preprocessor', source_fullname)

    # compiler
    simple_switch_target.add_command_option('compiler', "-o")
    simple_switch_target.add_command_option('compiler', "{}.json".format(basepath))
    simple_switch_target.add_command_option('compiler', "{}.p4i".format(basepath))
    # generate api has part of the compilation
    simple_switch_target.add_command_option('compiler', "--p4runtime-file");
    simple_switch_target.add_command_option('compiler', "{}.p4rt".format(basepath))

simple_switch_target.enable_commands(['preprocessor', 'compiler'])
config.target.append(simple_switch_target)

# PSA implementation on BMv2
psa_target = BackendDriver('bmv2-psa-p4org')
psa_target.add_command('none', \
        '/bin/echo "target ' + str(psa_target) + ' not yet implemented"')
psa_target.enable_commands(['none'])
config.target.append(psa_target)
